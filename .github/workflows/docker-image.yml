name: Build and Push Container Image on Release

on:
  release:
    types: [published]
  workflow_dispatch: # manual trigger

jobs:
  build:
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
        include:
          - arch: amd64
            runner: ubuntu-latest
          - arch: arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract release tag and set repo name
      run: |
        echo "REPO_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "RELEASE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/${{ matrix.arch }}
        file: ./Containerfile
        push: true
        tags: ghcr.io/${{ env.REPO_LOWER }}:${{ env.RELEASE_TAG }}-${{ matrix.arch }}
  manifest:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write
    steps:
      - name: Extract release tag and set repo name
        run: |
          echo "REPO_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "RELEASE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch image with buildx
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/${{ env.REPO_LOWER }}:${{ env.RELEASE_TAG }} \
            --tag ghcr.io/${{ env.REPO_LOWER }}:latest \
            ghcr.io/${{ env.REPO_LOWER }}:${{ env.RELEASE_TAG }}-amd64 \
            ghcr.io/${{ env.REPO_LOWER }}:${{ env.RELEASE_TAG }}-arm64
