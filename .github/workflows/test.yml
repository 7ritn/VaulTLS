name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache frontend deps (npm)
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache cargo registry + target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            backend/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('backend/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract repo name
        run: |
          echo "REPO_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Containerfile
          push: true
          tags: ghcr.io/${{ env.REPO_LOWER }}:dev
          load: true  # Needed so the image is available to docker-compose locally
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Run Docker Compose for E2E tests
        working-directory: ./tests
        run: docker-compose up --abort-on-container-exit --exit-code-from test
